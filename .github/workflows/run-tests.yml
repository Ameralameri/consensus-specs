name: Run tests

# Run tests on workflow_Dispatch
on: 
  push:
    branches:
      - dev 
      - master
  workflow_dispatch:
    inputs:
      test_type:
        default: minimal
        description: Type of test to run, either mainnet or minimal
        type: string
        required: true
  schedule:
    - cron: '0 0 * * *'

jobs:
  git-sync:
    runs-on: self-hosted
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache-git
        with:
          path: ./*
          key: ${{ github.sha }}
  
  pyspec-tests:
    runs-on: self-hosted
    needs: git-sync
    strategy:
      matrix:
        version: ["phase0", "altair", "bellatrix","capella"]
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Install pyspec requirements
        run: make install_test TEST_TYPE=minimal
      - name: test-${{ matrix.version }}
        run: make citest fork=${{ matrix.version }} TEST_TYPE=minimal

  table_of_contents:
     runs-on: self-hosted
     needs: git-sync
     steps:
        - uses: actions/cache@v2
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}
        - name: Check table of contents
          run: sudo npm install -g doctoc@2 && make check_toc
  codespell:
     runs-on: self-hosted
     needs: git-sync
     steps:
        - uses: actions/cache@v2
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}
        - name: Check codespell
          run: pip install 'codespell<3.0.0,>=2.0.0' --user &&  make codespell
  lint: 
      runs-on: self-hosted
      needs: git-sync
      steps:
        - uses: actions/cache@v2
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}
        - name: Run linter for pyspec
          run: make lint
        - name: Run linter for test generators
          run: make lint_generators  
  store_test_results:
      runs-on: self-hosted
      needs: pyspec-tests
      steps:
        - uses: actions/upload-artifact@v2
          if: always()
          with:
            name: test-results
            path: tests/core/pyspec/test-reports

